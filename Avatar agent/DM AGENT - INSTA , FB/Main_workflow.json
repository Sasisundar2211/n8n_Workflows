{
  "name": "Main workflow",
  "nodes": [
    {
      "parameters": {
        "promptType": "=define",
        "text": "=Email & Name for booking consultation:\n{{ $json.text }}\n\nLead Info:\n{{ $json.extraPrompt }}\n\nTrigger from Channel: \n{{ $json.trigger }}",
        "options": {
          "systemMessage": "=## 1. Core Identity & Goal\n\nYou are a friendly, efficient sales assistant focused on **residential solar panel systems**. Your job is to chat with leads, answer service questions using the knowledge base, qualify interest, collect contact details, **log everything in the CRM (`crmAgent`)**, and **book consultations (`calendarAgent`)**.\n\n## 2. Knowledge Source (CRITICAL)\n\n* Use **`technical_and_sales_knowledge` ONLY** to explain solar services, benefits, comparisons, warranties, and handle pricing (focus on value, no specific numbers).\n* **Do NOT use external info.** If something’s missing, ask the user or suggest a consultation. Never say “I don’t know.”\n\n## 3. Communication Rules (CRITICAL)\n\n* **Short & Conversational:** Max 160 characters per message. Keep it friendly.\n* **One Thought at a Time:** Give small chunks of info. Ask one question at a time.\n* **No Lists:** Avoid bullets or numbers.\n* **No Handoff Language.** Never say “Let me connect you.”\n\n## 4. Conversation Flow & Actions\n\n### State: INITIAL\n\n* **Goal:** Greet the user.\n* **Action:** Start with a simple hello like: “Hi! How can we help you?”\n* Only mention solar panels or consultations if the user brings it up first.\n* **Move to QUALIFYING when user shows interest.**\n\n### State: QUALIFYING\n\n* **Goal:** Understand the user's solar needs.\n* **Action:** Use `technical_and_sales_knowledge` to answer questions and explain solar options. Confirm if they want a consultation.\n* **Move to CONTACT\\_COLLECTION only after clear interest.**\n\n### State: CONTACT\\_COLLECTION\n\n* **WhatsApp Trigger:** **Skip this step** — you already have contact info.\n* **Other Triggers:**\n\n  * Ask for **First Name**.\n  * Then ask for **Email Address**.\n  * Save to memory (`contact.collectedInfo`).\n  * **Use `crmAgent` right after collecting info** to log the lead.\n  * **Move to SCHEDULING** after CRM step.\n\n### State: SCHEDULING\n\n* **Goal:** Book a consultation using `calendarAgent`.\n* **Requirements:** Name + Email must be saved and logged.\n* **Steps:**\n\n  * Ask for a preferred date and time.\n  * Use `calendarAgent` when you get a specific time.\n  * After booking, use `crmAgent` to update status to ‘Consultation Scheduled’.\n  * **Move to FOLLOW\\_UP.**\n\n### State: FOLLOW\\_UP\n\n* **Goal:** Confirm the booking details.\n* **Action:** Repeat date/time and let them know a calendar invite will go to their email.\n\n## 5. Response Examples\n\n* “Got it! A solar consultation could be a great step. Can I grab your first name to set it up?”\n* “Thanks, \\[Name]. Got your email. Let’s pick a time that works for your consultation. Any preferred day or time?”\n* “You’re set for Thursday at 3 PM. You’ll get a calendar invite to \\[Email]. Talk soon!”\n\n## 6. Memory Management\n\n```json\n{\n  \"contact\": {\n    \"verified\": false,\n    \"collectedInfo\": {\n      \"name\": \"\", \"email\": \"\", \"serviceInterest\": \"\", \"timingPreference\": \"\"\n    },\n    \"state\": \"CURRENT_STATE\",\n    \"lastStateChange\": \"timestamp\"\n  }\n}\n```\n\n## 7. Final Checks\n\n* Stick to the state flow.\n* Use `crmAgent` right after contact info is collected and again after booking.\n* Only use `calendarAgent` after all info is collected.\n* Adhere strictly to Communication Rules & Knowledge Source limits.\n\nIMPORTANT: Current date/time: {{ $now }}\nIMPORTANT: Trigger: {{ $json.trigger }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        960,
        1460
      ],
      "id": "2a16b2ec-51ce-4ccd-a423-0e215a6964b2",
      "name": "AI Agent"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        620,
        1460
      ],
      "id": "d9846751-21cf-4a4b-a3c2-c72ef9fecb43",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9df0a1da-742d-4ac6-b4f8-a76006c314db",
                    "leftValue": "={{ $('No Operation, do nothing').item.json.trigger }}",
                    "rightValue": "facebook",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "facebook"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "98550c9d-4266-4694-8d5a-a3972d6aad22",
                    "leftValue": "={{ $('No Operation, do nothing').item.json.trigger }}",
                    "rightValue": "instagram",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "instagram"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dd8bf574-3e33-42fb-9cb0-05f2482a039c",
                    "leftValue": "={{ $('No Operation, do nothing').item.json.trigger }}",
                    "rightValue": "chat",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Chat"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1740,
        1420
      ],
      "id": "8f14ffed-62ca-4bf8-84de-5658f7b7e037",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26a3553a-f37b-4f46-9a84-3f1661a5d152",
              "name": "trigger",
              "value": "facebook",
              "type": "string"
            },
            {
              "id": "11ae4f49-44ec-4416-a8d2-49a15fdf1e63",
              "name": "text",
              "value": "={{ $json.body.entry[0].messaging[0].message.text }}",
              "type": "string"
            },
            {
              "id": "3cfa9c98-dca2-43e6-9d69-7a20f61772f6",
              "name": "sessionId",
              "value": "={{ $json.body.entry[0].messaging[0].sender.id }}",
              "type": "string"
            },
            {
              "id": "b103277f-d1ef-498f-9286-14b0b7718c5d",
              "name": "extraPrompt",
              "value": "This conversation took place on Facebook Messenger.\n\nIf user is interested in your service, you can send the lead form to user and ask filling in\n\nYour response must be less then 300 chars.",
              "type": "string"
            },
            {
              "id": "f8d11aca-c325-4d8c-9c67-ef9440756f05",
              "name": "channelId",
              "value": "={{ $json.body.entry[0].id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        220,
        1160
      ],
      "id": "cba0eaaf-b151-4849-a2fb-cd56c4e968b1",
      "name": "Edit Fields - facebook"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -620,
        1440
      ],
      "id": "8bddf5cf-a2cc-4474-ae7e-e2b14d0b690d",
      "name": "Respond to Webhook - facebook get"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7dee1826-e2b5-44ea-9c0f-a0adb5bc740c",
              "leftValue": "={{ $json.body.entry[0].messaging[0].message?.is_echo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -220,
        1180
      ],
      "id": "7006dd77-2ffd-455c-be02-f5f09f296abb",
      "name": "If is not echo - facebook"
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v21.0",
        "node": "me",
        "edge": "messages",
        "options": {
          "queryParametersJson": "={\n  \"recipient\":{\n    \"id\":\"{{ $json.body.entry[0].messaging[0].sender.id }}\"\n  },\n  \"sender_action\":\"typing_on\"\n}"
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        60,
        920
      ],
      "id": "cd293c0b-e685-4381-b48b-211b7d2e7c3e",
      "name": "Sales Agent Demo - typing_on",
      "credentials": {
        "facebookGraphApi": {
          "id": "x1RIreXG4CJi5Bh5",
          "name": "N8n X Mesenger"
        }
      }
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v22.0",
        "node": "me",
        "edge": "messages",
        "options": {
          "queryParametersJson": "={\n  \"recipient\":{\n    \"id\":\"{{ $('No Operation, do nothing').item.json.sessionId }}\"\n  },\n  \"messaging_type\": \"RESPONSE\",\n  \"message\":{\n    \"text\":{{ JSON.stringify($json.output.substring(0,1000)) }}\n  }\n}"
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        2000,
        1340
      ],
      "id": "30cf508b-4a91-4189-9274-979e5cec85f2",
      "name": "Facebook Graph API - Sales Agent Demo",
      "credentials": {
        "facebookGraphApi": {
          "id": "x1RIreXG4CJi5Bh5",
          "name": "N8n X Mesenger"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.instagram.com/v23.0/me/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"recipient\":{\n    \"id\":\"{{ $('No Operation, do nothing').item.json.sessionId }}\"\n  },\n  \"messaging_type\": \"RESPONSE\",\n  \"message\":{\n    \"text\":{{ JSON.stringify($json.output.substring(0,1000)) }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2000,
        1560
      ],
      "id": "c4cc762e-dc55-40db-9a27-ffef25c0aa80",
      "name": "Instagram Graph API - smb.sales.agent.demo",
      "credentials": {
        "httpHeaderAuth": {
          "id": "9n9ij335tumrDDGk",
          "name": "N8n X Insta_chatbot"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "\"EVENT_RECEIVED\"",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        -620,
        1200
      ],
      "id": "9a1e94ef-0c00-4cfb-a732-e1986c59af2b",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -600,
        1940
      ],
      "id": "4a8e4c13-11ac-4bf5-af15-22c01f9865b5",
      "name": "Respond to Webhook - facebook get1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7dee1826-e2b5-44ea-9c0f-a0adb5bc740c",
              "leftValue": "={{ $json.body.entry[0].messaging[0].message?.is_echo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -180,
        1740
      ],
      "id": "e93dca33-c1cd-49ce-b170-719dbd198fbd",
      "name": "If is not echo - facebook1"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "\"EVENT_RECEIVED\"",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        -600,
        1740
      ],
      "id": "2194999f-9d83-45b1-a4e2-e594214f9ceb",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "POST",
          "GET"
        ],
        "path": "Insta-Trigger",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1040,
        1760
      ],
      "id": "ac650ae7-aaf4-48a7-8808-d6455a9c73a6",
      "name": "Instagram Trigger1",
      "webhookId": "b7e461f0-9a0d-4e27-9e86-f74a3e684e3a"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26a3553a-f37b-4f46-9a84-3f1661a5d152",
              "name": "trigger",
              "value": "instagram",
              "type": "string"
            },
            {
              "id": "11ae4f49-44ec-4416-a8d2-49a15fdf1e63",
              "name": "text",
              "value": "={{ $json.body.entry[0].messaging[0].message.text }}",
              "type": "string"
            },
            {
              "id": "3cfa9c98-dca2-43e6-9d69-7a20f61772f6",
              "name": "sessionId",
              "value": "={{ $json.body.entry[0].messaging[0].sender.id }}",
              "type": "string"
            },
            {
              "id": "f128bfd3-f02e-4444-8556-39fadb07d08e",
              "name": "extraPrompt",
              "value": "This conversation took place on Instagram.\n\nYour response must be less then 500 chars.",
              "type": "string"
            },
            {
              "id": "679e091e-d9dd-4cc3-b5a1-97f3790e09d0",
              "name": "channelId",
              "value": "={{ $json.body.entry[0].id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        1720
      ],
      "id": "1b120cec-398a-4fcb-92fe-ef604196adc9",
      "name": "Edit Fields - instagram"
    },
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "POST",
          "GET"
        ],
        "path": "Facbook-Trigger",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -980,
        1220
      ],
      "id": "9a6031a5-1de2-4e37-b3bd-cfaabde2a940",
      "name": "Facebook Trigger",
      "webhookId": "b7e461f0-9a0d-4e27-9e86-f74a3e684e3a"
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "5eb49031-9b2f-4260-a446-3fbf2ce1d51d",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        820,
        2300
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "pq6Ws7AZsv9Fq3OF",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "5925315c-d2a8-4ecf-a813-c33b6508a615",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1260,
        2180
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "pq6Ws7AZsv9Fq3OF",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Use this tool to schedule a consultation appointment in the calendar. You must provide the attendee's email address and the proposed start time in ISO 8601 format. You can optionally provide the attendee's name and a summary.\n\n",
        "workflowId": {
          "__rl": true,
          "value": "TkHxvBI0iEyvD1P6",
          "mode": "list",
          "cachedResultName": "Calendar workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1440,
        1700
      ],
      "id": "87357747-c89f-4d12-919d-cb675676ad2a",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "name": "crmAgent",
        "description": "Call this tool to take any action from CRM",
        "workflowId": {
          "__rl": true,
          "value": "nu8l4lx88kpzTeoc",
          "mode": "list",
          "cachedResultName": "CRM workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1280,
        1700
      ],
      "id": "40673bbc-93b2-4de6-aee2-3bcbe9e48da6",
      "name": "CRM Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1060,
        1700
      ],
      "id": "1ea6649d-7d46-42c9-8735-c88889c93651",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "iwpfRqQFuqVBUluJ",
          "name": "N8n X Postgres account"
        }
      }
    },
    {
      "parameters": {
        "name": "sales_technique_knowledge",
        "description": "Retrieve information about sales technique and company details",
        "topK": "=10"
      },
      "id": "781e64e0-2578-4d6e-b46d-6067f5ffe2a5",
      "name": "sales_technique_knowledge",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "position": [
        1080,
        1960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        880,
        2120
      ],
      "id": "7b6729af-f257-498b-a27f-b1e8807d2400",
      "name": "Supabase vector store",
      "credentials": {
        "supabaseApi": {
          "id": "uTou3dhMj78812UG",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "14yV_R8xYeQdzlIg6TuHwuMCswVdn_yrgFgBjK13BQ_Q",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        560,
        3760
      ],
      "id": "ce32cb8f-684a-4f07-97fe-0e20eff721db",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "P3fdcC0Pu8BryPwf",
          "name": "N8n X Google"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        780,
        3760
      ],
      "id": "2773a0cf-5f3f-4355-b224-695bfe80fbc4",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "uTou3dhMj78812UG",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        920,
        4000
      ],
      "id": "a0c3910f-1907-4691-8725-59591883b48d",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1020,
        4220
      ],
      "id": "9721bf33-286a-4e72-9ac9-fd19afd3450e",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        300,
        3760
      ],
      "id": "2a3d2f0e-5d9f-4a01-b98b-c14593877020",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        700,
        4040
      ],
      "id": "fe5580a3-dac5-4c62-a829-6e95ca9eea3f",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "pq6Ws7AZsv9Fq3OF",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "84dc8840-97a0-47d4-8a18-0608a1b357ae",
              "name": "trigger",
              "value": "chat",
              "type": "string"
            },
            {
              "id": "9a46b726-e9aa-4cb5-8c1a-d6d38b920908",
              "name": "text",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            },
            {
              "id": "e2b7a6a0-2677-4b56-b037-f010efb6da46",
              "name": "sessionId",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            },
            {
              "id": "bca35569-12c5-443e-8e08-c9f8718cd31a",
              "name": "extraPrompt",
              "value": "This conversation took place on Chatbox.\n\nYour response must be less then 1000 chars.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        180,
        2160
      ],
      "id": "91a2e759-0acc-4d99-a023-fd12ce439a70",
      "name": "Edit Fields - chat"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -160,
        2160
      ],
      "id": "379e8f13-ec6c-4cf2-bff7-42b012a47a7f",
      "name": "When chat message received",
      "webhookId": "a8f2a9ac-9715-4116-9764-75792127bfb5"
    },
    {
      "parameters": {
        "content": "## Facebook webhook connection ##",
        "height": 760,
        "width": 1640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1180,
        860
      ],
      "id": "3c7aafed-7fb4-48e9-9684-165c131c01bd",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Instagram webhook connection ##",
        "height": 760,
        "width": 1640,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1180,
        1660
      ],
      "id": "679e9bba-69f5-4564-9b91-e9989dcea8de",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## DM Agent ##",
        "height": 540,
        "width": 1140,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        520,
        1340
      ],
      "id": "48bb7835-121e-419b-a694-16d99f749115",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Sales data store ##",
        "height": 540,
        "width": 1140,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        520,
        1900
      ],
      "id": "272eb3b4-f0d6-417b-af03-6c757be4dde9",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## SEND REPLAY TO PLATFORMS ##",
        "height": 520,
        "width": 560,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1700,
        1260
      ],
      "id": "f48ba047-0a49-479b-bee0-6e3be8ebd707",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        920,
        1700
      ],
      "id": "219268f2-0954-47f4-b3e6-dd0f834c713c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "pq6Ws7AZsv9Fq3OF",
          "name": "OpenAi account 2"
        }
      }
    }
  ],
  "pinData": {
    "Instagram Trigger1": [
      {
        "json": {
          "headers": {
            "host": "narwhal-credible-jaguar.ngrok-free.app",
            "user-agent": "facebookexternalua",
            "content-length": "393",
            "accept": "*/*",
            "accept-encoding": "deflate, gzip",
            "content-type": "application/json",
            "instagram-api-version": "v23.0",
            "x-forwarded-for": "2a03:2880:10ff:9::",
            "x-forwarded-host": "narwhal-credible-jaguar.ngrok-free.app",
            "x-forwarded-proto": "https",
            "x-hub-signature": "sha1=cb626dbe3d173f72142eaa47fd84db9391d56771",
            "x-hub-signature-256": "sha256=49e72990f2f7d082f98c10d38eb8384f6bd6b68dfed4fb15d6db574ab10cedf0"
          },
          "params": {},
          "query": {},
          "body": {
            "object": "instagram",
            "entry": [
              {
                "time": 1751259112682,
                "id": "17841460144744883",
                "messaging": [
                  {
                    "sender": {
                      "id": "7165208810256109"
                    },
                    "recipient": {
                      "id": "17841460144744883"
                    },
                    "timestamp": 1751259112000,
                    "message": {
                      "mid": "aWdfZAG1faXRlbToxOklHTWVzc2FnZAUlEOjE3ODQxNDYwMTQ0NzQ0ODgzOjM0MDI4MjM2Njg0MTcxMDMwMTI0NDI3NjAxODc0MjA3NTMwMDI0NjozMjMwNTAyODY0NTgzMzAwNzM4MDk0Mjg3NDg3NTAwMjg4MAZDZD",
                      "text": "hi"
                    }
                  }
                ]
              }
            ]
          },
          "webhookUrl": "https://narwhal-credible-jaguar.ngrok-free.app/webhook/Insta-Trigger",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Facebook Graph API - Sales Agent Demo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Instagram Graph API - smb.sales.agent.demo",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Edit Fields - facebook": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If is not echo - facebook": {
      "main": [
        [
          {
            "node": "Edit Fields - facebook",
            "type": "main",
            "index": 0
          },
          {
            "node": "Sales Agent Demo - typing_on",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "If is not echo - facebook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook1": {
      "main": [
        [
          {
            "node": "If is not echo - facebook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Trigger1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook - facebook get1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If is not echo - facebook1": {
      "main": [
        [
          {
            "node": "Edit Fields - instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields - instagram": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Trigger": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook - facebook get",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase vector store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "sales_technique_knowledge",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "sales_technique_knowledge": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CRM Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase vector store": {
      "ai_vectorStore": [
        [
          {
            "node": "sales_technique_knowledge",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Edit Fields - chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields - chat": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "02aa4a04-86f8-45f9-98a8-abddd7802074",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "77f1d8375380ee2bc4995763b4e39528bf040d446fc3e9e5f6d802ec19784049"
  },
  "id": "KyZBMyuBIfWCP4oi",
  "tags": []
}