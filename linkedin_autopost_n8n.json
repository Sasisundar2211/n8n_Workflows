{
  "name": "LinkedIn Auto Post 4x/Week (Research-Based, Verified, Profile-Aligned)",
  "nodes": [
    {
      "parameters": {
        "triggerTimes": [
          {
            "mode": "cron",
            "cronExpression": "0 10 * * 2-5",
            "timezone": "Asia/Kolkata"
          }
        ]
      },
      "name": "Cron - Tue-Fri 10AM",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [200, 300],
      "notes": "Triggers workflow every Tuesday-Friday at 10:00 AM local time. Adjust timezone as needed."
    },
    {
      "parameters": {
        "url": "https://www.reddit.com/r/{{ $json.subreddit }}/search.json?q={{ $json.keyword }}&sort=hot&limit=5",
        "method": "GET",
        "jsonParameters": false,
        "responseFormat": "json",
        "headerParametersUi": {
          "parameter": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_REDDIT_ACCESS_TOKEN"
            }
          ]
        }
      },
      "name": "Fetch Reddit Candidates",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [500, 100],
      "notes": "Fetch candidate posts from configured subreddits filtered by keywords."
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": "YOUR_NOTION_DATABASE_ID",
        "filters": {},
        "options": { "returnAll": true }
      },
      "name": "Fetch Notion Drafts",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2,
      "position": [500, 300],
      "credentials": { "notionApi": "Notion API" },
      "notes": "Fetch prewritten drafts or notes from Notion if any exist."
    },
    {
      "parameters": {
        "functionCode": "// Candidate scoring and dedupe\nreturn items.map(item => {\n  item.json.relevanceScore = Math.random() * 100; // placeholder scoring\n  return item;\n}).sort((a,b) => b.json.relevanceScore - a.json.relevanceScore);"
      },
      "name": "Score & Dedupe Candidates",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [700, 200],
      "notes": "Compute relevance based on recency, engagement, credibility, trending score; remove duplicates by normalized title+link."
    },
    {
      "parameters": {
        "functionCode": "// LLM summarization, fact-check, post formatting\nreturn items.map(item => {\n  item.json.postText = `Hook: Example Hook\\n\\nContext: Example context\\n\\nCore Insight: Example core insight...`;\n  item.json.hashtags = ['#AI', '#ML', '#TechTrends'];\n  item.json.sources = ['https://example.com'];\n  item.json.imagePrompt = 'AI-generated image showing concept';\n  return item;\n});"
      },
      "name": "LLM Summary & Post Generation",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 200],
      "notes": "Generate structured LinkedIn post including hook, insights, data bullets, CTA, hashtags, image prompt."
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": "={{$json.id}}",
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Status",
              "type": "select",
              "selectValue": "Posted"
            }
          ]
        }
      },
      "name": "Mark Notion Post as Posted",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2,
      "credentials": { "notionApi": "Notion API" },
      "position": [1300, 200],
      "notes": "After posting, update the draft status to prevent reposting."
    },
    {
      "parameters": {
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "method": "POST",
        "authentication": "headerAuth",
        "jsonParameters": true,
        "headerParametersJson": "{\"Authorization\":\"Bearer YOUR_LINKEDIN_ACCESS_TOKEN\",\"X-Restli-Protocol-Version\":\"2.0.0\",\"Content-Type\":\"application/json\"}",
        "bodyParametersJson": "={\"author\":\"urn:li:person:YOUR_LINKEDIN_URN\",\"lifecycleState\":\"PUBLISHED\",\"specificContent\":{\"com.linkedin.ugc.ShareContent\":{\"shareCommentary\":{\"text\":{{$json.postText}}},\"shareMediaCategory\":\"NONE\"}},\"visibility\":{\"com.linkedin.ugc.MemberNetworkVisibility\":\"PUBLIC\"}}"
      },
      "name": "Post to LinkedIn",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1100, 200],
      "notes": "Publishes the post to LinkedIn using OAuth credentials."
    },
    {
      "parameters": {
        "functionCode": "console.log('Error Handling Placeholder');"
      },
      "name": "Error Handling",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1100, 400],
      "notes": "Placeholder for alerting system if any node fails (Slack/Email) with retry/exponential backoff."
    }
  ],
  "connections": {
    "Cron - Tue-Fri 10AM": {
      "main": [[{"node": "Fetch Reddit Candidates","type": "main","index": 0},{"node": "Fetch Notion Drafts","type": "main","index": 0}]]
    },
    "Fetch Reddit Candidates": { "main": [[{"node": "Score & Dedupe Candidates","type": "main","index": 0}]] },
    "Fetch Notion Drafts": { "main": [[{"node": "Score & Dedupe Candidates","type": "main","index": 0}]] },
    "Score & Dedupe Candidates": { "main": [[{"node": "LLM Summary & Post Generation","type": "main","index": 0}]] },
    "LLM Summary & Post Generation": { "main": [[{"node": "Post to LinkedIn","type": "main","index": 0},{"node": "Mark Notion Post as Posted","type": "main","index": 0}]] }
  }
}
